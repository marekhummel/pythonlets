# Hello World
program = """
 ++++++++++
 [
  >+++++++>++++++++++>+++>+<<<<-
 ]                       Schleife zur Vorbereitung der Textausgabe
 >++.                    Ausgabe von 'H'
 >+.                     Ausgabe von 'e'
 +++++++.                'l'
 .                       'l'
 +++.                    'o'
 >++.                    Leerzeichen
 <<+++++++++++++++.      'W'
 >.                      'o'
 +++.                    'r'
 ------.                 'l'
 --------.               'd'
 >+.                     '!'
 >.                      Zeilenvorschub
 +++.                    WagenrÃ¼cklauf
"""

#  Sierpinski
program = """
++++++++[>+>++++<<-]>++>>+<[-[>>+<<-]+>>]>+[
    -<<<[
        ->[+[-]+>++>>>-<<]<[<]>>++++++[<<+++++>>-]+<<++.[-]<<
    ]>.>+[>>]>+
]
"""

# Factorials
program = """>>>>++>+[
    [
        >[>>]<[>+>]<<[>->>+<<<-]>+[
            [+>>[<<+>>-]>]+[-<<+<]>-[
                -[<+>>+<-]++++++[>++++++++<-]+>.[-]<<[
                    >>>[[<<+>+>-]>>>]<<<<[[>+<-]<-<<]>-
                ]>>>[
                    <<-[<<+>>-]<+++++++++<[
                        >[->+>]>>>[<<[<+>-]>>>+>>[-<]<[>]>+<]<<<<<<-
                    ]>[-]>+>>[<<<+>>>-]>>>
                ]<<<+[-[+>>]<<<]>[<<<]>
            ]>>>[<[>>>]<<<[[>>>+<<<-]<<<]>>>>>>>-[<]>>>[<<]<<[>+>]<]<<
        ]++>>
    ]<<++++++++.+
]"""

# tic tac toe
# program = """--->--->>>>->->->>>>>-->>>>>>>>>>>>>>>>>>+>>++++++++++[
#   <<++[
#     --<+<<+<<+>>>>[
#       >[<->>+++>>[-]+++<<<+[<++>>+<--]]+>+++++[>>+++++++++<<-]
#       >>++++.[-]>>+[<<<<+>>+>>-]<<<<<<[>+<-]<<
#     ]++++++++++.[-]>++
#   ]-->>[-->[-]>]<<[
#     >>--[
#       -[
#         -[
#           -----[>+>+++++++<<+]-->>-.----->,[<->-]<[[<]+[->>]<-]<[<<[-]]>>>>
#         ]>
#       ]<[
#         >-[+<+++]+<+++[+[---->]+<<<<<<[>>]<[-]]
#         >[<+[---->]++[<]<[>]>[[>]+>+++++++++<<-[<]]]>[>>>>]
#       ]<[
#         -[[>+>+<<-]>[<+>-]++>+>>]<[<<++[-->>[-]]>[[-]>[<<+>>-]>]]
#       ]<[
#         [[<<]-[>>]<+<-]>[-<+]<<[<<]-<[>[+>>]>[>]>[-]]
#         >[[+>>]<-->>[>]+>>>]
#       ]<[
#         -[
#           --[+<<<<--[+>[-]>[<<+>+>-]<<[>>+<<-]]++[>]]
#           <<[>+>+<<-]>--[<+>-]++>>>
#         ]<[<<<[-]+++>[-]>[<+>>>+<<-]+>>>]
#       ]<[
#         +[[<]<<[<<]-<->>+>[>>]>[>]<-]+[-<+]<++[[>+<-]++<[<<->>+]<++]<
#         <<<<<<      +> > >+> > >+[
#         <<<               ->+>+>+[
#         <<<<<<<   +>->+> > >->->+[
#         <<<<<         ->+>+> >+>+[
#         <<<<            ->->+>->+[
#         <<<<<<<<+>-> >+> > >->+>+[
#         <<<<<         -> >+> >->+[
#         <<<<            +>->+> >+]]]]]]]
#         +++[[>+<-]<+++]--->>[-[<->-]<++>>]++[[<->-]>>]>[>]
#       ]<
#     ]
#   ]<
# ]"""

# -----------------------------

tape = [0] * 30000
ptr = 0
loop_stack = []
program = [p for p in program if p in "<>+-.,[]"]

pos = 0
while pos < len(program):
    char = program[pos]

    if char == "+":
        tape[ptr] += 1
    elif char == ",":
        val = input()
        tape[ptr] = ord(val)
    elif char == "-":
        tape[ptr] -= 1
    elif char == ".":
        print(chr(tape[ptr]), end="", flush=True)
    elif char == "<":
        ptr -= 1
        if ptr < 0:
            print("Reached tape beginning")
            break
    elif char == ">":
        ptr += 1
        if ptr >= 30000:
            print("Reached tape end")
            break
    elif char == "[":
        if tape[ptr] == 0:
            open_counter = 1
            while program[pos] != "]" or open_counter != 0:
                pos += 1
                if program[pos] in "[]":
                    open_counter += 1 if program[pos] == "[" else -1
        else:
            loop_stack.append(pos)
    elif char == "]":
        if tape[ptr] != 0:
            if not loop_stack:
                print("No matching opening bracket")
                break
            pos = loop_stack.pop() - 1
        else:
            loop_stack.pop()

    pos += 1
